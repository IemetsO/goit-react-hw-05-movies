{"version":3,"file":"static/js/movie-details.1ad7f88b.chunk.js","mappings":"sRAEMA,E,MAAMC,GAAAA,OAAa,CACvBC,QACE,oFAGSC,EAAmB,kBAC9BH,EAAII,IACF,6FAESC,EAAW,SAAAC,GAAU,OAChCN,EAAII,IAAJ,mGAC8FE,KAGnFC,EAAe,SAAAC,GAAO,OACjCR,EAAII,IAAJ,6CACwCI,EADxC,+CAGWC,EAAiB,SAAAD,GAAO,OACnCR,EAAII,IAAJ,6CACwCI,EADxC,uDAGWE,EAAiB,SAAAF,GAAO,OACnCR,EAAII,IAAJ,6CACwCI,EADxC,wD,yICxBF,GAAgB,UAAY,2BAA2B,OAAS,wBAAwB,aAAe,8BAA8B,QAAU,yBAAyB,MAAQ,uBAAuB,OAAS,wBAAwB,KAAO,sBAAsB,WAAa,6B,SCsFlR,EA/EgB,WAAO,IAAD,IACdG,GAASC,EAAAA,EAAAA,MACf,GAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRL,GAAW,IACXV,EAAAA,EAAAA,IAAaI,EAAOY,SACjBC,MAAK,SAAAC,GAAK,OAAIV,EAAaU,EAAMC,SACjCC,OAAM,SAAAC,GACLT,EAASS,GACTC,QAAQC,IAAIZ,MAEba,SAAQ,WACPd,GAAW,QAEd,CAACN,EAAOY,QAASL,IAEpB,IAAMc,EAAI,oBAAGZ,EAASa,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAIrC,OAAIlB,IAAYF,GAEZ,SAACqB,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SAASC,UAAU,OAApD,UACE,iBAAMA,UAAU,kBAAhB,0BAKFpB,GAEA,SAACqB,EAAA,EAAD,CAAOC,QAAQ,SAASF,UAAU,OAAlC,yCAMF,iBAAKA,UAAWG,EAAAA,UAAhB,WACG,SAAC,KAAD,CAAMC,GAAIV,EAAMW,MAAOF,EAAAA,OAAvB,UACC,4CAEF,iBAAKH,UAAWG,EAAAA,aAAhB,WACE,gBAAKH,UAAWG,EAAAA,QAAhB,UACE,gBACEG,IAAK9B,EAAU+B,YAAV,0CAA2D/B,EAAU+B,aAAgB,kCAC1FC,IAAI,SACJR,UAAWG,EAAAA,WAGf,iBAAKH,UAAWG,EAAAA,QAAhB,WACE,eAAIH,UAAWG,EAAAA,OAAf,uBACA,cAAGH,UAAWG,EAAAA,KAAd,SAAuB3B,EAAUiC,SACjC,eAAIT,UAAWG,EAAAA,OAAf,4BACA,cAAGH,UAAWG,EAAAA,KAAd,SAAuB3B,EAAUkC,gBACjC,eAAIV,UAAWG,EAAAA,OAAf,yBACA,cAAGH,UAAWG,EAAAA,KAAd,SAAuB3B,EAAUmC,YACjC,eAAIX,UAAWG,EAAAA,OAAf,sBACC3B,EAAUoC,OAAOC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACpB,cAAcd,UAAWG,EAAAA,KAAzB,SACGW,GADKA,aAMd,4BACE,eAAId,UAAWG,EAAAA,WAAf,qCACA,SAAC,KAAD,CAAMC,GAAG,OAAOT,MAAO,CAAEC,KAAMF,GAA/B,oBACA,SAAC,KAAD,CAAMU,GAAG,SAAST,MAAO,CAAEC,KAAMF,GAAjC,yBAEF,SAAC,EAAAqB,SAAD,WACA,SAAC,KAAD","sources":["api/api.js","webpack://react-homework-template/./src/components/Details/Details.module.css?cd8c","components/Details/Details.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL:\n    'https://api.themoviedb.org/3/movie/550?api_key=1949309aa629f4334f453cd9e8380085',\n});\n\nexport const getTrendingMovie = () =>\n  api.get(\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=1949309aa629f4334f453cd9e8380085'\n  );\nexport const getMovie = searchItem =>\n  api.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=1949309aa629f4334f453cd9e8380085&query=${searchItem}`\n  );\n\nexport const getMovieInfo = movieID =>\n  api.get(\n    `https://api.themoviedb.org/3/movie/${movieID}?api_key=1949309aa629f4334f453cd9e8380085`\n  );\nexport const getMovieReview = movieID =>\n  api.get(\n    `https://api.themoviedb.org/3/movie/${movieID}/reviews?api_key=1949309aa629f4334f453cd9e8380085`\n  );\nexport const getMovieActors = movieID =>\n  api.get(\n    `https://api.themoviedb.org/3/movie/${movieID}/credits?api_key=1949309aa629f4334f453cd9e8380085`\n  );\n\n  \n\n\n ","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Details_container__uh1PU\",\"button\":\"Details_button__kMnXV\",\"flex_wrapper\":\"Details_flex_wrapper__Cb0kf\",\"wrapper\":\"Details_wrapper__jElG9\",\"image\":\"Details_image__BlfEi\",\"tittle\":\"Details_tittle__53xwz\",\"text\":\"Details_text__ScnbF\",\"additional\":\"Details_additional__F4q-+\"};","import { useEffect, useState } from 'react';\nimport { Suspense } from 'react';\nimport { useParams } from 'react-router';\nimport {getMovieInfo} from \"../../api/api\";\nimport { Spinner, Alert } from 'react-bootstrap';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nimport s from './Details.module.css';\n\nconst Details = () => {\n  const params = useParams();\n  const [movieData, setMovieData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    setLoading(true);\n    getMovieInfo(params.movieId)\n      .then(movie => setMovieData(movie.data))\n      .catch(err => {\n        setError(err);\n        console.log(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [params.movieId, error]);\n\n  const path = location.state?.from ?? \"/\";\n\n \n\n  if (loading || !movieData) {\n    return (\n      <Spinner animation=\"border\" role=\"status\" className=\"mt-5\">\n        <span className=\"visually-hidden\">Loading...</span>\n      </Spinner>\n    );\n  }\n\n  if (error) {\n    return (\n      <Alert variant=\"danger\" className=\"mt-5\">\n        Oop! Something went wrong!\n      </Alert>\n    );\n  }\n  return (\n    <div className={s.container}>\n       <Link to={path} style={s.Button}>\n        <button> Go back</button>\n      </Link>\n      <div className={s.flex_wrapper}>\n        <div className={s.wrapper}>\n          <img\n            src={movieData.poster_path ? `https://image.tmdb.org/t/p/w500/${movieData.poster_path}` : \"https://via.placeholder.com/100\"}\n            alt=\"poster\"\n            className={s.image}\n          ></img>\n        </div>\n        <div className={s.wrapper}>\n          <h2 className={s.tittle}>Title : </h2>\n          <p className={s.text}>{movieData.title}</p>\n          <h2 className={s.tittle}>User Score : </h2>\n          <p className={s.text}>{movieData.vote_average}</p>\n          <h2 className={s.tittle}>Overview: </h2>\n          <p className={s.text}>{movieData.overview}</p>\n          <h2 className={s.tittle}>Genres: </h2>\n          {movieData.genres.map(({ name }) => (\n            <p key={name} className={s.text}>\n              {name}\n            </p>\n          ))}\n        </div>\n      </div>\n      <div>\n        <h2 className={s.additional}>Additional information</h2>\n        <Link to=\"Cast\" state={{ from: path }}> Cast</Link>\n        <Link to=\"Review\" state={{ from: path }}> Review</Link>\n      </div>\n      <Suspense>\n      <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default Details;\n"],"names":["api","axios","baseURL","getTrendingMovie","get","getMovie","searchItem","getMovieInfo","movieID","getMovieReview","getMovieActors","params","useParams","useState","movieData","setMovieData","loading","setLoading","error","setError","location","useLocation","useEffect","movieId","then","movie","data","catch","err","console","log","finally","path","state","from","Spinner","animation","role","className","Alert","variant","s","to","style","src","poster_path","alt","title","vote_average","overview","genres","map","name","Suspense"],"sourceRoot":""}